// media query mixin (min-width only)

@mixin breakpoint($point) {
  @if $point == tiny {
    // 20em (320px)
      @media (min-width: 20em)  { @content; }
  }  
  @else if $point == small {
    // 30em (480px)
    @media (min-width: 30em) { @content; }
  }
  @else if $point == medium {
    // 37.5em (600px) 
    @media (min-width: 37.5em) { @content; }
  }
  @else if $point == regular {
    // 48em (768px)
    @media (min-width: 48em) { @content; }
  }
  @else if $point == large {
    // 56.25em (900px)
    @media (min-width: 56.25em) { @content; }
  }
  @else if $point == larger {
    // 68.75em (1100px)
    @media (min-width: 68.75em) { @content; }
  }
  @else if $point == huge {
    // 81.25em (1300px)
    @media (min-width: 81.25em) { @content; }
  }
  @else {
    // custom media query
    @media (min-width: $point / $doc-font-size +em) { @content; }
  }
}

@mixin rwdIE($name, $wrapper-class, $IE: true) {
  
   @if $IE == true {
     .lt-ie9 .#{$wrapper-class} {
        @content;
     }
    .#{$wrapper-class}  {
      @include breakpoint($name) {
        @content;
      }
    }
  }
  @else if $IE == false {
    .#{$wrapper-class}  {
      @include breakpoint($name) {
        @content;
      }
    }  
  }
}

// font-size mixin


@mixin font-size($size, $margin:yes, $line-height:$doc-line-height) {
  @if $margin == yes  {
    font-size: 0px + $size;
    font-size: $size / $doc-font-size +rem;
    line-height: ceil($size / $doc-line-height) * ($doc-line-height / $size);
    margin-bottom: 0px + $line-height;
    margin-bottom: ($line-height / $doc-font-size)+rem;
}
  @if $margin == false {
    font-size: 0px + $size;
    font-size: $size / $doc-font-size +rem;
    line-height: ceil($size / $line-height) * ($line-height / $size);
  }
  
  @if $line-height != $doc-line-height {
    font-size: 0px + $size;
    font-size: $size / $doc-font-size +rem;
    line-height: $line-height;
    margin-bottom: 0px + $line-height;
    margin-bottom: ($line-height / $doc-font-size)+rem;
}
  @else {
    font-size: 0px + $size;
    font-size: $size / $doc-font-size +rem;
    margin-bottom: 0px + $margin;
    margin-bottom: 0rem + $margin / $doc-font-size;
  }
  
}

// font-size for just REMs with px fallback

@mixin font-rem($size) {
  font-size: 0px + $size;
  font-size: $size / $doc-font-size +rem;
}

// inline-block

@mixin inline-block {
  display: inline-block;
  .lt-ie8 & {
    zoom: 1;
    *display: inline;
  }
}

// box-sizing with IE fallback and grid lovliness

@mixin box($width:'null', $padding:'null', $margin:$gutter, $first: false) {

  @if $first == false {
    float: left;
    margin-right: 0% + $margin;
    padding: 0% +$padding;  
    width: 0% + $width - $margin;
    .lt-ie8 & { 
      margin-right: 0% + $margin;
      padding: 0% + $padding;
      width: 0% + $width - $padding - $padding - $margin;
    }    
  }
  @else {
    float: left;
    margin-left: 0% + $first;
    margin-right: 0% + $margin;
    padding: 0% +$padding;
    width: 0% + $width - $margin - $first;
    .lt-ie7 & { 
      margin-left: 0% + $first;
      margin-right: 0% + $margin;
      padding: 0% + $padding;
      width: 0% + $width - $padding - $padding - $margin - $first;
    }
  }
}

// rems

@function rem($size) {
  @return #{$size/$doc-font-size}rem
}

// ems
@function em($size) {
  @return #{$size/$doc-font-size}em
}